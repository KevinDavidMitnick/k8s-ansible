---
- name: install flannel and docker
  yum:
    name: "{{ item }}"
    state: latest
  with_items:
    - "conntrack"
    - "flannel"
    - "docker"

- name: copy flanneld conf
  template:
    src: "{{ item }}.j2"
    dest: "/etc/sysconfig/{{ item }}"
  with_items:
    - "flanneld"
    - "docker"

- name: copy flanneld service
  template:
    src: "{{ item }}.j2"
    dest: "/usr/lib/systemd/system/{{ item }}"
  with_items:
    - "flanneld.service"
    - "docker.service"

- name: systemctl daemon-reload
  shell: systemctl daemon-reload

- name: enable flanneld
  service:
    name: "{{ item }}"
    enabled: true
  with_items:
    - "flanneld"
    - "docker"

- name: start flanneld
  service:
    name: flanneld
    state: restarted
  retries: 3
  delay: "{{ retry_stagger | random + 3}}"

- name: start docker
  service:
    name: docker
    state: restarted

- name: make sure kublet workdir is exists
  file:
    path: "/var/lib/kubelet"
    state: directory


- name: grant kubelet-bootstrap system:node-bootstrapper cluster role
  shell: "kubectl create clusterrolebinding kubelet-bootstrap --clusterrole=system:node-bootstrapper --user=kubelet-bootstrap"
  args:
    chdir: "{{ KUBE_DIR }}"
  when:
    - inventory_hostname == groups['master'][0]

- name: copy kubelet and kube-proxy binary to node
  copy:
    src: "{{ item }}"
    dest: "/usr/local/bin/{{ item }}"
    owner: root
    group: root
    mode: 0755
  with_items:
    - "kubelet"
    - "kube-proxy"

- name: copy kubelet and kube-proxy config to node
  template:
    src: "{{ item }}.j2"
    dest: "{{ KUBE_DIR }}/{{ item }}"
  with_items:
    - "config"
    - "kubelet"
    - "proxy"

- name: copy kubelet and kube-proxy service to node
  template:
    src: "{{ item }}.j2"
    dest: "/usr/lib/systemd/system/{{ item }}"
  with_items:
    - "kubelet.service"
    - "kube-proxy.service"

- name: enable kubelet and kube-proxy
  service:
    name: "{{ item }}"
    enabled: true
  with_items:
    - "kubelet"
    - "kube-proxy"

- name: start kubelet and kube-proxy
  service:
    name: "{{ item }}"
    state: restarted
  with_items:
    - "kubelet"
    - "kube-proxy"

- name: copy approve script
  copy:
    src: "auto_approve.sh"
    dest: "{{ KUBE_DIR }}/auto_approve.sh"
    mode: 0755
    owner: root
    group: root
  when:
    - inventory_hostname == groups['master'][0]

- name: approve csr
  shell: "/usr/bin/sh {{ KUBE_DIR }}/auto_approve.sh"
  args:
    chdir: "{{ KUBE_DIR }}"
  when:
    - inventory_hostname ==  groups['master'][0]

